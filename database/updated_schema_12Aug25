-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.academic_programs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  university_name text NOT NULL,
  program_name text NOT NULL,
  degree_level text NOT NULL CHECK (degree_level = ANY (ARRAY['bachelor'::text, 'master'::text, 'phd'::text, 'certificate'::text])),
  country_id uuid,
  program_type text NOT NULL CHECK (program_type = ANY (ARRAY['medical_informatics'::text, 'health_data_science'::text, 'clinical_ai'::text, 'biomedical_engineering'::text])),
  annual_graduates_estimated integer,
  curriculum_includes_ai boolean DEFAULT false,
  clinical_partnerships boolean DEFAULT false,
  research_output_annual integer,
  program_url text,
  accreditation_status text,
  establishment_year integer,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT academic_programs_pkey PRIMARY KEY (id),
  CONSTRAINT academic_programs_country_id_fkey FOREIGN KEY (country_id) REFERENCES public.countries(id)
);
CREATE TABLE public.ahaii_assessments (
  id integer NOT NULL DEFAULT nextval('ahaii_assessments_id_seq'::regclass),
  assessment_id character varying NOT NULL UNIQUE,
  assessment_date timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  methodology_version character varying NOT NULL DEFAULT '1.0'::character varying,
  countries_assessed jsonb,
  total_countries integer NOT NULL,
  data_collection_status character varying DEFAULT 'pending'::character varying CHECK (data_collection_status::text = ANY (ARRAY['pending'::character varying, 'in_progress'::character varying, 'completed'::character varying, 'failed'::character varying]::text[])),
  scoring_status character varying DEFAULT 'pending'::character varying CHECK (scoring_status::text = ANY (ARRAY['pending'::character varying, 'in_progress'::character varying, 'completed'::character varying, 'failed'::character varying]::text[])),
  validation_status character varying DEFAULT 'pending'::character varying CHECK (validation_status::text = ANY (ARRAY['pending'::character varying, 'in_progress'::character varying, 'completed'::character varying, 'failed'::character varying]::text[])),
  report_status character varying DEFAULT 'pending'::character varying CHECK (report_status::text = ANY (ARRAY['pending'::character varying, 'in_progress'::character varying, 'completed'::character varying, 'failed'::character varying]::text[])),
  regional_average_score double precision,
  data_quality_grade character CHECK (data_quality_grade = ANY (ARRAY['A'::bpchar, 'B'::bpchar, 'C'::bpchar, 'D'::bpchar, 'F'::bpchar])),
  expert_validation_coverage double precision,
  CONSTRAINT ahaii_assessments_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ahaii_country_scores (
  id integer NOT NULL DEFAULT nextval('ahaii_country_scores_id_seq'::regclass),
  assessment_id character varying,
  country_code character NOT NULL,
  country_name character varying NOT NULL,
  total_score double precision NOT NULL CHECK (total_score >= 0::double precision AND total_score <= 100::double precision),
  overall_confidence double precision NOT NULL CHECK (overall_confidence >= 0::double precision AND overall_confidence <= 1::double precision),
  tier_classification integer NOT NULL CHECK (tier_classification = ANY (ARRAY[1, 2, 3])),
  regional_rank integer,
  confidence_interval_lower double precision,
  confidence_interval_upper double precision,
  confidence_level double precision DEFAULT 0.95,
  data_quality_grade character CHECK (data_quality_grade = ANY (ARRAY['A'::bpchar, 'B'::bpchar, 'C'::bpchar, 'D'::bpchar, 'F'::bpchar])),
  data_completeness_pct double precision,
  expert_validation_status character varying,
  calculation_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  last_updated timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ahaii_country_scores_pkey PRIMARY KEY (id),
  CONSTRAINT ahaii_country_scores_assessment_id_fkey FOREIGN KEY (assessment_id) REFERENCES public.ahaii_assessments(assessment_id)
);
CREATE TABLE public.ahaii_indicator_values (
  id integer NOT NULL DEFAULT nextval('ahaii_indicator_values_id_seq'::regclass),
  country_score_id integer,
  indicator_code character varying NOT NULL,
  indicator_name character varying NOT NULL,
  indicator_type character varying NOT NULL CHECK (indicator_type::text = ANY (ARRAY['quantitative'::character varying, 'policy'::character varying, 'ecosystem'::character varying]::text[])),
  pillar_name character varying NOT NULL CHECK (pillar_name::text = ANY (ARRAY['human_capital'::character varying, 'physical_infrastructure'::character varying, 'regulatory_framework'::character varying, 'economic_market'::character varying]::text[])),
  raw_value double precision,
  normalized_value double precision CHECK (normalized_value IS NULL OR normalized_value >= 0::double precision AND normalized_value <= 100::double precision),
  confidence_score double precision NOT NULL CHECK (confidence_score >= 0::double precision AND confidence_score <= 1::double precision),
  data_source character varying NOT NULL,
  collection_date timestamp without time zone NOT NULL,
  year integer,
  expert_validated boolean DEFAULT false,
  validation_confidence double precision,
  is_proxy_value boolean DEFAULT false,
  proxy_source_indicator character varying,
  CONSTRAINT ahaii_indicator_values_pkey PRIMARY KEY (id),
  CONSTRAINT ahaii_indicator_values_country_score_id_fkey FOREIGN KEY (country_score_id) REFERENCES public.ahaii_country_scores(id)
);
CREATE TABLE public.ahaii_pillar_scores (
  id integer NOT NULL DEFAULT nextval('ahaii_pillar_scores_id_seq'::regclass),
  country_score_id integer,
  pillar_name character varying NOT NULL CHECK (pillar_name::text = ANY (ARRAY['human_capital'::character varying, 'physical_infrastructure'::character varying, 'regulatory_framework'::character varying, 'economic_market'::character varying]::text[])),
  score double precision NOT NULL CHECK (score >= 0::double precision AND score <= 100::double precision),
  confidence double precision NOT NULL CHECK (confidence >= 0::double precision AND confidence <= 1::double precision),
  weight double precision NOT NULL CHECK (weight >= 0::double precision AND weight <= 1::double precision),
  sub_components jsonb,
  normalized_indicators jsonb,
  improvement_potential double precision,
  key_constraints jsonb,
  proxy_applications jsonb,
  regional_percentile double precision,
  regional_tier character varying,
  CONSTRAINT ahaii_pillar_scores_pkey PRIMARY KEY (id),
  CONSTRAINT ahaii_pillar_scores_country_score_id_fkey FOREIGN KEY (country_score_id) REFERENCES public.ahaii_country_scores(id)
);
CREATE TABLE public.ahaii_regional_benchmarks (
  id integer NOT NULL DEFAULT nextval('ahaii_regional_benchmarks_id_seq'::regclass),
  region character varying NOT NULL,
  indicator_name character varying NOT NULL,
  mean_value double precision,
  median_value double precision,
  percentile_75 double precision,
  percentile_25 double precision,
  countries_with_data integer,
  total_countries integer,
  last_updated timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT ahaii_regional_benchmarks_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ahaii_scores (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  country_id uuid,
  assessment_year integer NOT NULL,
  assessment_quarter integer,
  total_score numeric NOT NULL CHECK (total_score >= 0::numeric AND total_score <= 100::numeric),
  global_ranking integer,
  regional_ranking integer,
  sub_regional_ranking integer,
  human_capital_score numeric NOT NULL CHECK (human_capital_score >= 0::numeric AND human_capital_score <= 100::numeric),
  human_capital_clinical_literacy numeric CHECK (human_capital_clinical_literacy >= 0::numeric AND human_capital_clinical_literacy <= 100::numeric),
  human_capital_informatics_capacity numeric CHECK (human_capital_informatics_capacity >= 0::numeric AND human_capital_informatics_capacity <= 100::numeric),
  human_capital_workforce_pipeline numeric CHECK (human_capital_workforce_pipeline >= 0::numeric AND human_capital_workforce_pipeline <= 100::numeric),
  physical_infrastructure_score numeric NOT NULL CHECK (physical_infrastructure_score >= 0::numeric AND physical_infrastructure_score <= 100::numeric),
  physical_digitization_level numeric CHECK (physical_digitization_level >= 0::numeric AND physical_digitization_level <= 100::numeric),
  physical_computational_capacity numeric CHECK (physical_computational_capacity >= 0::numeric AND physical_computational_capacity <= 100::numeric),
  physical_connectivity_reliability numeric CHECK (physical_connectivity_reliability >= 0::numeric AND physical_connectivity_reliability <= 100::numeric),
  regulatory_infrastructure_score numeric NOT NULL CHECK (regulatory_infrastructure_score >= 0::numeric AND regulatory_infrastructure_score <= 100::numeric),
  regulatory_approval_pathways numeric CHECK (regulatory_approval_pathways >= 0::numeric AND regulatory_approval_pathways <= 100::numeric),
  regulatory_data_governance numeric CHECK (regulatory_data_governance >= 0::numeric AND regulatory_data_governance <= 100::numeric),
  regulatory_market_access numeric CHECK (regulatory_market_access >= 0::numeric AND regulatory_market_access <= 100::numeric),
  economic_market_score numeric NOT NULL CHECK (economic_market_score >= 0::numeric AND economic_market_score <= 100::numeric),
  economic_market_maturity numeric CHECK (economic_market_maturity >= 0::numeric AND economic_market_maturity <= 100::numeric),
  economic_financial_sustainability numeric CHECK (economic_financial_sustainability >= 0::numeric AND economic_financial_sustainability <= 100::numeric),
  economic_research_funding numeric CHECK (economic_research_funding >= 0::numeric AND economic_research_funding <= 100::numeric),
  readiness_tier integer NOT NULL CHECK (readiness_tier = ANY (ARRAY[1, 2, 3])),
  tier_justification text,
  overall_confidence_score numeric CHECK (overall_confidence_score >= 0::numeric AND overall_confidence_score <= 1::numeric),
  data_completeness_percentage numeric CHECK (data_completeness_percentage >= 0::numeric AND data_completeness_percentage <= 100::numeric),
  expert_validation_score numeric CHECK (expert_validation_score >= 0::numeric AND expert_validation_score <= 1::numeric),
  peer_review_status text DEFAULT 'pending'::text CHECK (peer_review_status = ANY (ARRAY['peer_reviewed'::text, 'expert_validated'::text, 'pending'::text, 'disputed'::text])),
  who_alignment_bonus numeric DEFAULT 0 CHECK (who_alignment_bonus >= 0::numeric),
  unesco_alignment_bonus numeric DEFAULT 0 CHECK (unesco_alignment_bonus >= 0::numeric),
  au_strategy_alignment_bonus numeric DEFAULT 0 CHECK (au_strategy_alignment_bonus >= 0::numeric),
  compared_to_similar_economies jsonb,
  development_trajectory text CHECK (development_trajectory = ANY (ARRAY['improving'::text, 'stable'::text, 'declining'::text, 'rapid_growth'::text])),
  key_strengths ARRAY,
  priority_improvement_areas ARRAY,
  assessment_methodology_version text DEFAULT '1.0'::text,
  indicator_weights_used jsonb,
  methodology_adjustments text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ahaii_scores_pkey PRIMARY KEY (id),
  CONSTRAINT ahaii_scores_country_id_fkey FOREIGN KEY (country_id) REFERENCES public.countries(id)
);
CREATE TABLE public.clinical_validation_studies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  study_title text NOT NULL,
  organization_id uuid,
  country_id uuid,
  study_type text NOT NULL CHECK (study_type = ANY (ARRAY['rct'::text, 'observational'::text, 'pilot'::text, 'retrospective'::text, 'prospective'::text])),
  patient_population text,
  sample_size integer,
  study_duration_months integer,
  ai_technology_type text NOT NULL CHECK (ai_technology_type = ANY (ARRAY['medical_imaging'::text, 'clinical_decision_support'::text, 'predictive_analytics'::text, 'nlp'::text])),
  deployment_setting text CHECK (deployment_setting = ANY (ARRAY['tertiary_hospital'::text, 'primary_care'::text, 'community_health'::text, 'telemedicine'::text])),
  primary_outcome_met boolean,
  clinical_effectiveness_demonstrated boolean DEFAULT false,
  cost_effectiveness_demonstrated boolean DEFAULT false,
  safety_profile_acceptable boolean DEFAULT false,
  peer_reviewed_publication text,
  publication_date date,
  regulatory_submission boolean DEFAULT false,
  regulatory_approval_received boolean DEFAULT false,
  validates_local_infrastructure boolean DEFAULT false,
  infrastructure_lessons_learned text,
  scalability_assessment text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT clinical_validation_studies_pkey PRIMARY KEY (id),
  CONSTRAINT clinical_validation_studies_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.health_ai_organizations(id),
  CONSTRAINT clinical_validation_studies_country_id_fkey FOREIGN KEY (country_id) REFERENCES public.countries(id)
);
CREATE TABLE public.countries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  iso_code_alpha3 text NOT NULL UNIQUE,
  region text NOT NULL,
  population bigint,
  gdp_usd bigint,
  healthcare_spending_percent_gdp numeric,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT countries_pkey PRIMARY KEY (id)
);
CREATE TABLE public.data_collection_runs (
  id integer NOT NULL DEFAULT nextval('data_collection_runs_id_seq'::regclass),
  assessment_id character varying,
  run_id character varying NOT NULL UNIQUE,
  start_time timestamp without time zone NOT NULL,
  end_time timestamp without time zone,
  status character varying DEFAULT 'running'::character varying CHECK (status::text = ANY (ARRAY['running'::character varying, 'completed'::character varying, 'failed'::character varying]::text[])),
  world_bank_status character varying DEFAULT 'pending'::character varying CHECK (world_bank_status::text = ANY (ARRAY['pending'::character varying, 'running'::character varying, 'completed'::character varying, 'failed'::character varying]::text[])),
  policy_indicators_status character varying DEFAULT 'pending'::character varying CHECK (policy_indicators_status::text = ANY (ARRAY['pending'::character varying, 'running'::character varying, 'completed'::character varying, 'failed'::character varying]::text[])),
  ecosystem_mapping_status character varying DEFAULT 'pending'::character varying CHECK (ecosystem_mapping_status::text = ANY (ARRAY['pending'::character varying, 'running'::character varying, 'completed'::character varying, 'failed'::character varying]::text[])),
  total_data_points_collected integer DEFAULT 0,
  world_bank_indicators integer DEFAULT 0,
  policy_indicators integer DEFAULT 0,
  ecosystem_organizations integer DEFAULT 0,
  error_count integer DEFAULT 0,
  error_details jsonb,
  CONSTRAINT data_collection_runs_pkey PRIMARY KEY (id),
  CONSTRAINT data_collection_runs_assessment_id_fkey FOREIGN KEY (assessment_id) REFERENCES public.ahaii_assessments(assessment_id)
);
CREATE TABLE public.development_partnerships (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  country_id uuid,
  partner_organization text NOT NULL,
  partner_type text NOT NULL CHECK (partner_type = ANY (ARRAY['multilateral'::text, 'bilateral'::text, 'foundation'::text, 'ngo'::text])),
  partnership_name text NOT NULL,
  partnership_focus text NOT NULL CHECK (partnership_focus = ANY (ARRAY['capacity_building'::text, 'infrastructure_development'::text, 'research_support'::text, 'policy_development'::text])),
  start_date date,
  end_date date,
  total_commitment_usd numeric,
  disbursed_amount_usd numeric,
  ai_component_percentage numeric CHECK (ai_component_percentage >= 0::numeric AND ai_component_percentage <= 100::numeric),
  target_health_areas ARRAY,
  capacity_building_focus ARRAY,
  expected_infrastructure_impact ARRAY,
  measured_outcomes ARRAY,
  success_metrics jsonb,
  partnership_status text DEFAULT 'active'::text CHECK (partnership_status = ANY (ARRAY['active'::text, 'completed'::text, 'suspended'::text, 'cancelled'::text])),
  performance_rating text CHECK (performance_rating = ANY (ARRAY['excellent'::text, 'satisfactory'::text, 'needs_improvement'::text, 'unsatisfactory'::text])),
  lessons_learned text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT development_partnerships_pkey PRIMARY KEY (id),
  CONSTRAINT development_partnerships_country_id_fkey FOREIGN KEY (country_id) REFERENCES public.countries(id)
);
CREATE TABLE public.expert_validation_results (
  id integer NOT NULL DEFAULT nextval('expert_validation_results_id_seq'::regclass),
  validation_request_id character varying NOT NULL UNIQUE,
  country_code character NOT NULL,
  indicator_name character varying NOT NULL,
  indicator_type character varying NOT NULL CHECK (indicator_type::text = ANY (ARRAY['quantitative'::character varying, 'policy'::character varying, 'ecosystem'::character varying]::text[])),
  original_value text,
  consensus_value text,
  consensus_confidence double precision CHECK (consensus_confidence IS NULL OR consensus_confidence >= 0::double precision AND consensus_confidence <= 1::double precision),
  expert_agreement double precision CHECK (expert_agreement IS NULL OR expert_agreement >= 0::double precision AND expert_agreement <= 1::double precision),
  response_count integer,
  validation_method character varying,
  final_status character varying CHECK (final_status::text = ANY (ARRAY['validated'::character varying, 'disputed'::character varying, 'pending'::character varying, 'rejected'::character varying]::text[])),
  consensus_date timestamp without time zone,
  evidence_sources jsonb,
  expert_reasoning text,
  CONSTRAINT expert_validation_results_pkey PRIMARY KEY (id)
);
CREATE TABLE public.health_ai_organizations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  organization_type text NOT NULL CHECK (organization_type = ANY (ARRAY['startup'::text, 'university'::text, 'hospital'::text, 'research_center'::text, 'government'::text, 'ngo'::text, 'development_partner'::text])),
  country_id uuid,
  city text,
  founding_year integer,
  employee_count integer,
  website text,
  description text,
  primary_health_ai_focus ARRAY,
  clinical_partnerships ARRAY,
  regulatory_approvals ARRAY,
  total_funding_usd numeric,
  latest_funding_round_usd numeric,
  latest_funding_date date,
  funding_sources ARRAY,
  active_clinical_deployments integer DEFAULT 0,
  countries_with_deployments ARRAY,
  validated_clinical_outcomes boolean DEFAULT false,
  peer_reviewed_publications integer DEFAULT 0,
  who_collaboration boolean DEFAULT false,
  international_partnerships ARRAY,
  global_health_initiatives ARRAY,
  contributes_to_human_capital boolean DEFAULT false,
  contributes_to_physical_infra boolean DEFAULT false,
  contributes_to_regulatory_framework boolean DEFAULT false,
  contributes_to_market_development boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT health_ai_organizations_pkey PRIMARY KEY (id),
  CONSTRAINT health_ai_organizations_country_id_fkey FOREIGN KEY (country_id) REFERENCES public.countries(id)
);
CREATE TABLE public.healthcare_facilities (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  facility_name text NOT NULL,
  facility_type text NOT NULL CHECK (facility_type = ANY (ARRAY['hospital'::text, 'clinic'::text, 'research_center'::text])),
  country_id uuid,
  region_state text,
  city text,
  emr_system text,
  emr_implementation_year integer,
  pacs_system boolean DEFAULT false,
  digital_imaging_capability boolean DEFAULT false,
  telemedicine_capability boolean DEFAULT false,
  ai_tools_in_use ARRAY,
  ai_pilot_programs ARRAY,
  clinical_decision_support boolean DEFAULT false,
  bed_count integer,
  annual_patients integer,
  staff_physicians integer,
  staff_nurses integer,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT healthcare_facilities_pkey PRIMARY KEY (id),
  CONSTRAINT healthcare_facilities_country_id_fkey FOREIGN KEY (country_id) REFERENCES public.countries(id)
);
CREATE TABLE public.infrastructure_indicators (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  country_id uuid,
  pillar text NOT NULL CHECK (pillar = ANY (ARRAY['human_capital'::text, 'physical'::text, 'regulatory'::text, 'economic'::text])),
  indicator_name text NOT NULL,
  indicator_value numeric,
  indicator_unit text,
  data_year integer NOT NULL,
  data_quarter integer,
  data_source text NOT NULL,
  data_source_type text NOT NULL CHECK (data_source_type = ANY (ARRAY['who_official'::text, 'government_ministry'::text, 'academic_peer_reviewed'::text, 'industry_report'::text, 'ngo_survey'::text])),
  data_collection_method text CHECK (data_collection_method = ANY (ARRAY['national_survey'::text, 'administrative_records'::text, 'expert_assessment'::text, 'facility_audit'::text])),
  sample_size integer,
  geographic_coverage text DEFAULT 'national'::text CHECK (geographic_coverage = ANY (ARRAY['national'::text, 'regional'::text, 'urban_only'::text, 'sample_areas'::text])),
  verification_status text DEFAULT 'unverified'::text CHECK (verification_status = ANY (ARRAY['who_validated'::text, 'peer_reviewed'::text, 'government_verified'::text, 'unverified'::text, 'disputed'::text])),
  confidence_level text DEFAULT 'medium'::text CHECK (confidence_level = ANY (ARRAY['high'::text, 'medium'::text, 'low'::text])),
  confidence_score numeric CHECK (confidence_score >= 0::numeric AND confidence_score <= 1::numeric),
  validation_notes text,
  last_verified_at timestamp with time zone,
  global_benchmark_available boolean DEFAULT false,
  global_percentile numeric CHECK (global_percentile >= 0::numeric AND global_percentile <= 100::numeric),
  african_percentile numeric CHECK (african_percentile >= 0::numeric AND african_percentile <= 100::numeric),
  regional_percentile numeric CHECK (regional_percentile >= 0::numeric AND regional_percentile <= 100::numeric),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT infrastructure_indicators_pkey PRIMARY KEY (id),
  CONSTRAINT infrastructure_indicators_country_id_fkey FOREIGN KEY (country_id) REFERENCES public.countries(id)
);
CREATE TABLE public.infrastructure_intelligence (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  report_type text NOT NULL CHECK (report_type = ANY (ARRAY['academic_scan'::text, 'news_monitoring'::text, 'policy_tracking'::text, 'market_analysis'::text])),
  country_id uuid,
  report_title text NOT NULL,
  report_summary text,
  key_findings jsonb,
  source_type text NOT NULL CHECK (source_type = ANY (ARRAY['academic_paper'::text, 'news_article'::text, 'government_report'::text, 'company_announcement'::text])),
  source_url text,
  source_publication text,
  publication_date date,
  affects_human_capital boolean DEFAULT false,
  affects_physical_infrastructure boolean DEFAULT false,
  affects_regulatory_framework boolean DEFAULT false,
  affects_economic_market boolean DEFAULT false,
  impact_significance text DEFAULT 'low'::text CHECK (impact_significance = ANY (ARRAY['high'::text, 'medium'::text, 'low'::text])),
  processed_by_ai boolean DEFAULT true,
  confidence_score numeric CHECK (confidence_score >= 0::numeric AND confidence_score <= 1::numeric),
  verification_status text DEFAULT 'pending'::text CHECK (verification_status = ANY (ARRAY['verified'::text, 'pending'::text, 'disputed'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT infrastructure_intelligence_pkey PRIMARY KEY (id),
  CONSTRAINT infrastructure_intelligence_country_id_fkey FOREIGN KEY (country_id) REFERENCES public.countries(id)
);
CREATE TABLE public.international_framework_alignment (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  country_id uuid,
  framework_name text NOT NULL,
  framework_category text NOT NULL CHECK (framework_category = ANY (ARRAY['ethics'::text, 'readiness_assessment'::text, 'regulatory'::text, 'development_strategy'::text])),
  alignment_status text NOT NULL CHECK (alignment_status = ANY (ARRAY['fully_aligned'::text, 'partially_aligned'::text, 'planning_alignment'::text, 'not_aligned'::text])),
  alignment_score numeric CHECK (alignment_score >= 0::numeric AND alignment_score <= 1::numeric),
  specific_requirements_met ARRAY,
  requirements_in_progress ARRAY,
  requirements_gaps ARRAY,
  assessment_date date NOT NULL,
  assessment_source text,
  next_review_date date,
  affects_regulatory_score boolean DEFAULT false,
  affects_human_capital_score boolean DEFAULT false,
  regulatory_weight_adjustment numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT international_framework_alignment_pkey PRIMARY KEY (id),
  CONSTRAINT international_framework_alignment_country_id_fkey FOREIGN KEY (country_id) REFERENCES public.countries(id)
);
CREATE TABLE public.regulatory_frameworks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  country_id uuid,
  framework_type text NOT NULL CHECK (framework_type = ANY (ARRAY['medical_device_ai'::text, 'health_data_privacy'::text, 'telemedicine'::text, 'clinical_trials'::text])),
  framework_name text NOT NULL,
  status text NOT NULL CHECK (status = ANY (ARRAY['proposed'::text, 'draft'::text, 'enacted'::text, 'implemented'::text])),
  introduction_date date,
  implementation_date date,
  last_updated date,
  framework_details jsonb,
  international_alignment ARRAY,
  effectiveness_score numeric CHECK (effectiveness_score >= 0::numeric AND effectiveness_score <= 5::numeric),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT regulatory_frameworks_pkey PRIMARY KEY (id),
  CONSTRAINT regulatory_frameworks_country_id_fkey FOREIGN KEY (country_id) REFERENCES public.countries(id)
);